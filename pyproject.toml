[project]
name = "kinexon-handball-api"
version = "0.1.0"
description = "A Python wrapper for accessing and processing Kinexon Handball data."
authors = [
    { name = "Michael Adams", email = "m@ad4ms.de" }
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.12"

# Core dependencies
dependencies = [
    "requests>=2.32.4",
    "pandas>=2.3.1",
    "python-dotenv>=1.1.1",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "tqdm>=4.67.1",
    "PyYAML>=6.0",
]

# Project metadata
keywords = ["handball", "kinexon", "api", "data", "wrapper"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Development dependencies
[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=5.0",
    "requests-mock>=1.12",
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "types-requests>=2.31.0",
]

lint = [
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "types-requests>=2.31.0",
]

[project.urls]
Homepage = "https://github.com/mad4ms/KinexonHandballAPI"
Repository = "https://github.com/mad4ms/KinexonHandballAPI"
Issues = "https://github.com/mad4ms/KinexonHandballAPI/issues"

# Build system
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

# =============================================================================
# Code Quality Tools Configuration
# =============================================================================

# Black - Code formatter
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort - Import sorting
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# flake8 - Linting
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "D200", "D103"]

# mypy - Type checking
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# pytest - Testing
[tool.pytest.ini_options]
markers = [
    "integration: mark test as integration test (requires live API access)",
]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
